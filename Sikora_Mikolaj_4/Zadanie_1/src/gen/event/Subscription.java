// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

package gen.event;

/**
 * Protobuf type {@code event.Subscription}
 */
public  final class Subscription extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:event.Subscription)
    SubscriptionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Subscription.newBuilder() to construct.
  private Subscription(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Subscription() {
    event_ = 0;
    cities_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Subscription();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Subscription(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            event_ = rawValue;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              cities_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000001;
            }
            cities_.add(rawValue);
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                cities_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cities_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        cities_ = java.util.Collections.unmodifiableList(cities_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return gen.event.EventProto.internal_static_event_Subscription_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return gen.event.EventProto.internal_static_event_Subscription_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            gen.event.Subscription.class, gen.event.Subscription.Builder.class);
  }

  public static final int EVENT_FIELD_NUMBER = 1;
  private int event_;
  /**
   * <code>.event.EventType event = 1;</code>
   * @return The enum numeric value on the wire for event.
   */
  public int getEventValue() {
    return event_;
  }
  /**
   * <code>.event.EventType event = 1;</code>
   * @return The event.
   */
  public gen.event.EventType getEvent() {
    @SuppressWarnings("deprecation")
    gen.event.EventType result = gen.event.EventType.valueOf(event_);
    return result == null ? gen.event.EventType.UNRECOGNIZED : result;
  }

  public static final int CITIES_FIELD_NUMBER = 2;
  private java.util.List<java.lang.Integer> cities_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, gen.event.City> cities_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, gen.event.City>() {
            public gen.event.City convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              gen.event.City result = gen.event.City.valueOf(from);
              return result == null ? gen.event.City.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .event.City cities = 2;</code>
   * @return A list containing the cities.
   */
  public java.util.List<gen.event.City> getCitiesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, gen.event.City>(cities_, cities_converter_);
  }
  /**
   * <code>repeated .event.City cities = 2;</code>
   * @return The count of cities.
   */
  public int getCitiesCount() {
    return cities_.size();
  }
  /**
   * <code>repeated .event.City cities = 2;</code>
   * @param index The index of the element to return.
   * @return The cities at the given index.
   */
  public gen.event.City getCities(int index) {
    return cities_converter_.convert(cities_.get(index));
  }
  /**
   * <code>repeated .event.City cities = 2;</code>
   * @return A list containing the enum numeric values on the wire for cities.
   */
  public java.util.List<java.lang.Integer>
  getCitiesValueList() {
    return cities_;
  }
  /**
   * <code>repeated .event.City cities = 2;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of cities at the given index.
   */
  public int getCitiesValue(int index) {
    return cities_.get(index);
  }
  private int citiesMemoizedSerializedSize;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (event_ != gen.event.EventType.MEETING.getNumber()) {
      output.writeEnum(1, event_);
    }
    if (getCitiesList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(citiesMemoizedSerializedSize);
    }
    for (int i = 0; i < cities_.size(); i++) {
      output.writeEnumNoTag(cities_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (event_ != gen.event.EventType.MEETING.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, event_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < cities_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(cities_.get(i));
      }
      size += dataSize;
      if (!getCitiesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }citiesMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof gen.event.Subscription)) {
      return super.equals(obj);
    }
    gen.event.Subscription other = (gen.event.Subscription) obj;

    if (event_ != other.event_) return false;
    if (!cities_.equals(other.cities_)) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + EVENT_FIELD_NUMBER;
    hash = (53 * hash) + event_;
    if (getCitiesCount() > 0) {
      hash = (37 * hash) + CITIES_FIELD_NUMBER;
      hash = (53 * hash) + cities_.hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static gen.event.Subscription parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static gen.event.Subscription parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static gen.event.Subscription parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static gen.event.Subscription parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static gen.event.Subscription parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static gen.event.Subscription parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static gen.event.Subscription parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static gen.event.Subscription parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static gen.event.Subscription parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static gen.event.Subscription parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static gen.event.Subscription parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static gen.event.Subscription parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(gen.event.Subscription prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code event.Subscription}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:event.Subscription)
      gen.event.SubscriptionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gen.event.EventProto.internal_static_event_Subscription_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gen.event.EventProto.internal_static_event_Subscription_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gen.event.Subscription.class, gen.event.Subscription.Builder.class);
    }

    // Construct using gen.event.Subscription.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      event_ = 0;

      cities_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return gen.event.EventProto.internal_static_event_Subscription_descriptor;
    }

    @java.lang.Override
    public gen.event.Subscription getDefaultInstanceForType() {
      return gen.event.Subscription.getDefaultInstance();
    }

    @java.lang.Override
    public gen.event.Subscription build() {
      gen.event.Subscription result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public gen.event.Subscription buildPartial() {
      gen.event.Subscription result = new gen.event.Subscription(this);
      int from_bitField0_ = bitField0_;
      result.event_ = event_;
      if (((bitField0_ & 0x00000001) != 0)) {
        cities_ = java.util.Collections.unmodifiableList(cities_);
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.cities_ = cities_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof gen.event.Subscription) {
        return mergeFrom((gen.event.Subscription)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(gen.event.Subscription other) {
      if (other == gen.event.Subscription.getDefaultInstance()) return this;
      if (other.event_ != 0) {
        setEventValue(other.getEventValue());
      }
      if (!other.cities_.isEmpty()) {
        if (cities_.isEmpty()) {
          cities_ = other.cities_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureCitiesIsMutable();
          cities_.addAll(other.cities_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      gen.event.Subscription parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (gen.event.Subscription) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int event_ = 0;
    /**
     * <code>.event.EventType event = 1;</code>
     * @return The enum numeric value on the wire for event.
     */
    public int getEventValue() {
      return event_;
    }
    /**
     * <code>.event.EventType event = 1;</code>
     * @param value The enum numeric value on the wire for event to set.
     * @return This builder for chaining.
     */
    public Builder setEventValue(int value) {
      event_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.event.EventType event = 1;</code>
     * @return The event.
     */
    public gen.event.EventType getEvent() {
      @SuppressWarnings("deprecation")
      gen.event.EventType result = gen.event.EventType.valueOf(event_);
      return result == null ? gen.event.EventType.UNRECOGNIZED : result;
    }
    /**
     * <code>.event.EventType event = 1;</code>
     * @param value The event to set.
     * @return This builder for chaining.
     */
    public Builder setEvent(gen.event.EventType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      event_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.event.EventType event = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearEvent() {
      
      event_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> cities_ =
      java.util.Collections.emptyList();
    private void ensureCitiesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        cities_ = new java.util.ArrayList<java.lang.Integer>(cities_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @return A list containing the cities.
     */
    public java.util.List<gen.event.City> getCitiesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, gen.event.City>(cities_, cities_converter_);
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @return The count of cities.
     */
    public int getCitiesCount() {
      return cities_.size();
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @param index The index of the element to return.
     * @return The cities at the given index.
     */
    public gen.event.City getCities(int index) {
      return cities_converter_.convert(cities_.get(index));
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @param index The index to set the value at.
     * @param value The cities to set.
     * @return This builder for chaining.
     */
    public Builder setCities(
        int index, gen.event.City value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCitiesIsMutable();
      cities_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @param value The cities to add.
     * @return This builder for chaining.
     */
    public Builder addCities(gen.event.City value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCitiesIsMutable();
      cities_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @param values The cities to add.
     * @return This builder for chaining.
     */
    public Builder addAllCities(
        java.lang.Iterable<? extends gen.event.City> values) {
      ensureCitiesIsMutable();
      for (gen.event.City value : values) {
        cities_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCities() {
      cities_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @return A list containing the enum numeric values on the wire for cities.
     */
    public java.util.List<java.lang.Integer>
    getCitiesValueList() {
      return java.util.Collections.unmodifiableList(cities_);
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of cities at the given index.
     */
    public int getCitiesValue(int index) {
      return cities_.get(index);
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of cities at the given index.
     * @return This builder for chaining.
     */
    public Builder setCitiesValue(
        int index, int value) {
      ensureCitiesIsMutable();
      cities_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @param value The enum numeric value on the wire for cities to add.
     * @return This builder for chaining.
     */
    public Builder addCitiesValue(int value) {
      ensureCitiesIsMutable();
      cities_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .event.City cities = 2;</code>
     * @param values The enum numeric values on the wire for cities to add.
     * @return This builder for chaining.
     */
    public Builder addAllCitiesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureCitiesIsMutable();
      for (int value : values) {
        cities_.add(value);
      }
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:event.Subscription)
  }

  // @@protoc_insertion_point(class_scope:event.Subscription)
  private static final gen.event.Subscription DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new gen.event.Subscription();
  }

  public static gen.event.Subscription getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Subscription>
      PARSER = new com.google.protobuf.AbstractParser<Subscription>() {
    @java.lang.Override
    public Subscription parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Subscription(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Subscription> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Subscription> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public gen.event.Subscription getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

